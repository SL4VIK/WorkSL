{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\terme\\\\Desktop\\\\Project\\\\WorkSL\\\\worksl_f\\\\src\\\\Components\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useDispatch } from \"react-redux\";\nimport { useTranslation } from 'react-i18next';\nimport { Redirect } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = () => {\n  _s();\n\n  const [redirect, setRedirect] = useState(false);\n  const {\n    t,\n    i18n\n  } = useTranslation();\n  const dispatch = useDispatch();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const submit = async e => {\n    e.preventDefault();\n    const response = await fetch('http://127.0.0.1:8000/api/login', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'X-Requested-With': 'XMLHttpRequest'\n      },\n      credentials: 'include',\n      body: JSON.stringify({\n        email,\n        password\n      })\n    });\n    GetUser();\n  };\n\n  const GetUser = async () => {\n    const response = await fetch('http://127.0.0.1:8000/api/user', {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'X-Requested-With': 'XMLHttpRequest'\n      },\n      credentials: 'include'\n    });\n    const content = await response.json();\n\n    if (response.status === 200) {\n      dispatch({\n        type: 'LOGIN',\n        payload: content\n      });\n    }\n  };\n\n  if (response.status === 200) {\n    setRedirect(true);\n  }\n\n  if (redirect) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/cabinet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 24\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"main\", {\n        className: \"form-signin\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: submit,\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"h3 mb-3 fw-normal\",\n            children: t(\"login.label\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"inputEmail\",\n            class: \"visually-hidden\",\n            children: \"Email address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            id: \"inputEmail\",\n            class: \"form-control\",\n            placeholder: t(\"register.email\"),\n            required: true,\n            onChange: e => setEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"inputPassword\",\n            class: \"visually-hidden\",\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"inputPassword\",\n            class: \"form-control\",\n            placeholder: t(\"register.password\"),\n            required: true,\n            onChange: e => setPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"w-100 btn btn-lg btn-primary\",\n            type: \"submit\",\n            children: t(\"login.btn\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 13\n  }, this);\n};\n\n_s(Login, \"8GYwd52O5+JakA9E2bQH2dEvses=\", false, function () {\n  return [useTranslation, useDispatch];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/Users/terme/Desktop/Project/WorkSL/worksl_f/src/Components/Login.js"],"names":["React","useState","useDispatch","useTranslation","Redirect","Login","redirect","setRedirect","t","i18n","dispatch","email","setEmail","password","setPassword","submit","e","preventDefault","response","fetch","method","headers","credentials","body","JSON","stringify","GetUser","content","json","status","type","payload","target","value"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\nimport {useDispatch} from \"react-redux\";\r\nimport {useTranslation} from 'react-i18next';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\n\r\n const Login  = () => {\r\n    const [redirect, setRedirect] = useState(false);\r\n    const {t, i18n} = useTranslation();\r\n    const dispatch = useDispatch();\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    const submit = async (e) => {\r\n        e.preventDefault();\r\n        const response = await fetch('http://127.0.0.1:8000/api/login', {\r\n            method: 'POST',\r\n            headers: {'Content-Type': 'application/json',\r\n                    'X-Requested-With': 'XMLHttpRequest',},\r\n            credentials: 'include',\r\n            body: JSON.stringify({\r\n                email,\r\n                password,\r\n            }),\r\n        });\r\n\r\n        GetUser();\r\n    }\r\n    const GetUser = async () => {\r\n        const response = await fetch('http://127.0.0.1:8000/api/user', {\r\n                method: 'GET',\r\n                headers: {'Content-Type': 'application/json', 'X-Requested-With': 'XMLHttpRequest'},\r\n                credentials: 'include',\r\n            });\r\n            const content = await response.json();\r\n            if(response.status === 200){\r\n              dispatch({type: 'LOGIN', payload: content})}\r\n            }\r\n            if(response.status === 200){\r\n                setRedirect(true);\r\n            }\r\n            if(redirect){\r\n                return <Redirect to='/cabinet'/>\r\n            }\r\n        return (\r\n            <div>\r\n                <div className='App'>\r\n                <main className=\"form-signin\">\r\n                    <form onSubmit={submit}>\r\n                        <h1 className=\"h3 mb-3 fw-normal\">{t(\"login.label\")}</h1>\r\n                        <label for=\"inputEmail\" class=\"visually-hidden\">Email address</label>\r\n                        <input type=\"email\" id=\"inputEmail\" class=\"form-control\" placeholder={t(\"register.email\")} required\r\n                        onChange={e => setEmail(e.target.value)}\r\n                        />\r\n                        <label for=\"inputPassword\" class=\"visually-hidden\">Password</label>\r\n                        <input type=\"password\" id=\"inputPassword\" class=\"form-control\" placeholder={t(\"register.password\")} required\r\n                         onChange={e => setPassword(e.target.value)}\r\n                        />\r\n                        <br></br>\r\n                        <button className=\"w-100 btn btn-lg btn-primary\" type=\"submit\">{t(\"login.btn\")}</button>\r\n                    </form>\r\n                </main>\r\n            </div>\r\n            </div>\r\n        )\r\n    }\r\nexport default Login;\r\n"]},"metadata":{},"sourceType":"module"}