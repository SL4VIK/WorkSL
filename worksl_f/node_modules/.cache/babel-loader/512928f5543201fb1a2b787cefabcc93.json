{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\terme\\\\Desktop\\\\Project\\\\WorkSL\\\\worksl_f\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Header from './Components/Header';\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  useEffect(() => {\n    let intervalId = setInterval(async () => {\n      const response = await fetch('http://127.0.0.1:8000/api/timecalculate', {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          'X-Requested-With': 'XMLHttpRequest'\n        },\n        credentials: 'include'\n      });\n      const content = await response.json();\n      const now = new Date();\n      console.log(content + now);\n    }, 60000);\n    return () => {\n      clearInterval(intervalId);\n    };\n  }, []);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    (async () => {\n      const response = await fetch('http://127.0.0.1:8000/api/user', {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          'X-Requested-With': 'XMLHttpRequest'\n        },\n        credentials: 'include'\n      });\n      const content = await response.json();\n\n      if (response.status === 200) {\n        dispatch({\n          type: 'LOGIN',\n          payload: content\n        });\n      }\n    })();\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"RrumHZy9Ytq72K2CJzMKhMFoeHo=\", false, function () {\n  return [useDispatch];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/terme/Desktop/Project/WorkSL/worksl_f/src/App.js"],"names":["Header","React","useEffect","useDispatch","useSelector","App","intervalId","setInterval","response","fetch","method","headers","credentials","content","json","now","Date","console","log","clearInterval","dispatch","status","type","payload"],"mappings":";;;AAAA,OAAO,WAAP;AACA,OAAO,sCAAP;AACA,OAAOA,MAAP,MAAmB,qBAAnB;AACA,OAAOC,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;;;AAGA,SAASC,GAAT,GAAe;AAAA;;AACbH,EAAAA,SAAS,CAAC,MAAM;AACd,QAAII,UAAU,GAAGC,WAAW,CAAC,YAAY;AACrC,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,yCAAD,EAA4C;AACpEC,QAAAA,MAAM,EAAE,KAD4D;AAEpEC,QAAAA,OAAO,EAAE;AAAE,0BAAgB,kBAAlB;AAAsC,8BAAoB;AAA1D,SAF2D;AAGpEC,QAAAA,WAAW,EAAE;AAHuD,OAA5C,CAA5B;AAKA,YAAMC,OAAO,GAAG,MAAML,QAAQ,CAACM,IAAT,EAAtB;AACA,YAAMC,GAAG,GAAG,IAAIC,IAAJ,EAAZ;AAEAC,MAAAA,OAAO,CAACC,GAAR,CAAYL,OAAO,GAAGE,GAAtB;AACH,KAV2B,EAU1B,KAV0B,CAA5B;AAYA,WAAO,MAAM;AACTI,MAAAA,aAAa,CAACb,UAAD,CAAb;AACH,KAFD;AAGH,GAhBU,EAgBR,EAhBQ,CAAT;AAiBA,QAAMc,QAAQ,GAAGjB,WAAW,EAA5B;AACAD,EAAAA,SAAS,CAAC,MAAK;AACb,KACI,YAAY;AACR,YAAMM,QAAQ,GAAG,MAAMC,KAAK,CAAC,gCAAD,EAAmC;AAC3DC,QAAAA,MAAM,EAAE,KADmD;AAE3DC,QAAAA,OAAO,EAAE;AAAC,0BAAgB,kBAAjB;AAAqC,8BAAoB;AAAzD,SAFkD;AAG3DC,QAAAA,WAAW,EAAE;AAH8C,OAAnC,CAA5B;AAKA,YAAMC,OAAO,GAAG,MAAML,QAAQ,CAACM,IAAT,EAAtB;;AACA,UAAGN,QAAQ,CAACa,MAAT,KAAoB,GAAvB,EAA2B;AACzBD,QAAAA,QAAQ,CAAC;AAACE,UAAAA,IAAI,EAAE,OAAP;AAAgBC,UAAAA,OAAO,EAAEV;AAAzB,SAAD,CAAR;AAA4C;AAEjD,KAXL;AAaC,GAdM,CAAT;AAgBA,sBACE;AAAA,2BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;GAzCQR,G;UAkBUF,W;;;KAlBVE,G;AA2CT,eAAeA,GAAf","sourcesContent":["import './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Header from './Components/Header';\nimport React, {useEffect} from 'react';\nimport {useDispatch, useSelector} from \"react-redux\";\n\n\nfunction App() {\n  useEffect(() => {\n    let intervalId = setInterval(async () => {\n        const response = await fetch('http://127.0.0.1:8000/api/timecalculate', {\n            method: 'PUT',\n            headers: { 'Content-Type': 'application/json', 'X-Requested-With': 'XMLHttpRequest' },\n            credentials: 'include',\n        });\n        const content = await response.json();\n        const now = new Date();\n\n        console.log(content + now);\n    },60000)\n\n    return () => {\n        clearInterval(intervalId);\n    };\n}, []);\n  const dispatch = useDispatch();\n  useEffect(()=> {\n    (\n        async () => {\n            const response = await fetch('http://127.0.0.1:8000/api/user', {\n                method: 'GET',\n                headers: {'Content-Type': 'application/json', 'X-Requested-With': 'XMLHttpRequest'},\n                credentials: 'include',\n            });\n            const content = await response.json();\n            if(response.status === 200){\n              dispatch({type: 'LOGIN', payload: content})}\n           \n        }\n    )()\n    }\n)\n  return (\n    <div>\n      <Header/>\n      {/* <Login/> */}\n    </div>\n  );\n}\n\nexport default App;\n\n"]},"metadata":{},"sourceType":"module"}