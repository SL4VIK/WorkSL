{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\terme\\\\Desktop\\\\Project\\\\WorkSL\\\\worksl_f\\\\src\\\\Components\\\\Usertable.js\";\n// import React from \"react\";\n// import ReactDOM from \"react-dom\";\n// import CRUDTable, {\n//   Fields,\n//   Field,\n//   CreateForm,\n//   UpdateForm,\n//   DeleteForm\n// } from \"react-crud-table\";\n// // Component's Base CSS\n// import \"./Css/UserTable.css\";\n// const UserTable = ({ field }) => <textarea {...field} />;\n// let tasks = [\n//   {\n//     id: 1,\n//     title: \"Create an example\",\n//     description: \"Create an example of how to use the component\"\n//   },\n//   {\n//     id: 2,\n//     title: \"Improve\",\n//     description: \"Improve the component!\"\n//   }\n// ];\n// const SORTERS = {\n//   NUMBER_ASCENDING: mapper => (a, b) => mapper(a) - mapper(b),\n//   NUMBER_DESCENDING: mapper => (a, b) => mapper(b) - mapper(a),\n//   STRING_ASCENDING: mapper => (a, b) => mapper(a).localeCompare(mapper(b)),\n//   STRING_DESCENDING: mapper => (a, b) => mapper(b).localeCompare(mapper(a))\n// };\n// const getSorter = data => {\n//   const mapper = x => x[data.field];\n//   let sorter = SORTERS.STRING_ASCENDING(mapper);\n//   if (data.field === \"id\") {\n//     sorter =\n//       data.direction === \"ascending\"\n//         ? SORTERS.NUMBER_ASCENDING(mapper)\n//         : SORTERS.NUMBER_DESCENDING(mapper);\n//   } else {\n//     sorter =\n//       data.direction === \"ascending\"\n//         ? SORTERS.STRING_ASCENDING(mapper)\n//         : SORTERS.STRING_DESCENDING(mapper);\n//   }\n//   return sorter;\n// };\n// let count = tasks.length;\n// const service = {\n//   fetchItems: payload => {\n//     let result = Array.from(tasks);\n//     result = result.sort(getSorter(payload.sort));\n//     return Promise.resolve(result);\n//   },\n//   create: task => {\n//     count += 1;\n//     tasks.push({\n//       ...task,\n//       id: count\n//     });\n//     return Promise.resolve(task);\n//   },\n//   update: data => {\n//     const task = tasks.find(t => t.id === data.id);\n//     task.title = data.title;\n//     task.description = data.description;\n//     return Promise.resolve(task);\n//   },\n//   delete: data => {\n//     const task = tasks.find(t => t.id === data.id);\n//     tasks = tasks.filter(t => t.id !== task.id);\n//     return Promise.resolve(task);\n//   }\n// };\n// const styles = {\n//   container: { margin: \"auto\", width: \"fit-content\" }\n// };\n// const Example = () => (\n//   <div style={styles.container}>\n//     <CRUDTable\n//       caption=\"Tasks\"\n//       fetchItems={payload => service.fetchItems(payload)}\n//     >\n//       <Fields>\n//         <Field name=\"id\" label=\"Id\" hideInCreateForm />\n//         <Field name=\"title\" label=\"Title\" placeholder=\"Title\" />\n//         <Field\n//           name=\"description\"\n//           label=\"Description\"\n//           render={UserTable}\n//         />\n//       </Fields>\n//       <CreateForm\n//         title=\"Task Creation\"\n//         message=\"Create a new task!\"\n//         trigger=\"Create Task\"\n//         onSubmit={task => service.create(task)}\n//         submitText=\"Create\"\n//         validate={values => {\n//           const errors = {};\n//           if (!values.title) {\n//             errors.title = \"Please, provide task's title\";\n//           }\n//           if (!values.description) {\n//             errors.description = \"Please, provide task's description\";\n//           }\n//           return errors;\n//         }}\n//       />\n//       <UpdateForm\n//         title=\"Task Update Process\"\n//         message=\"Update task\"\n//         trigger=\"Update\"\n//         onSubmit={task => service.update(task)}\n//         submitText=\"Update\"\n//         validate={values => {\n//           const errors = {};\n//           if (!values.id) {\n//             errors.id = \"Please, provide id\";\n//           }\n//           if (!values.title) {\n//             errors.title = \"Please, provide task's title\";\n//           }\n//           if (!values.description) {\n//             errors.description = \"Please, provide task's description\";\n//           }\n//           return errors;\n//         }}\n//       />\n//       <DeleteForm\n//         title=\"Task Delete Process\"\n//         message=\"Are you sure you want to delete the task?\"\n//         trigger=\"Delete\"\n//         onSubmit={task => service.delete(task)}\n//         submitText=\"Delete\"\n//         validate={values => {\n//           const errors = {};\n//           if (!values.id) {\n//             errors.id = \"Please, provide id\";\n//           }\n//           return errors;\n//         }}\n//       />\n//     </CRUDTable>\n//   </div>\n// );\n// Example.propTypes = {};\n// ReactDOM.render(<Example />, document.getElementById(\"root\"));\n// export default UserTable;\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UserTable = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      class: \"table table-dark\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 1\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"First name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 1\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Last name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 1\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 1\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 1\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"row\",\n            children: \"1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 1\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"Mark\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 1\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"Otto\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 1\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"@mdo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 1\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"row\",\n            children: \"2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 1\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"Jacob\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 1\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"Thornton\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 1\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"@fat\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 1\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"row\",\n            children: \"3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 1\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"Larry\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 1\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"the Bird\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 1\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"@twitter\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 1\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 1\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 174,\n    columnNumber: 7\n  }, this);\n};\n\n_c = UserTable;\nexport default UserTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserTable\");","map":{"version":3,"sources":["C:/Users/terme/Desktop/Project/WorkSL/worksl_f/src/Components/Usertable.js"],"names":["React","UserTable"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA,OAAOA,KAAP,MAAkB,OAAlB;;;AAGA,MAAMC,SAAS,GAAG,MAAM;AACpB,sBACE;AAAA,2BAEA;AAAO,MAAA,KAAK,EAAC,kBAAb;AAAA,8BACN;AAAA,+BACA;AAAA,kCACA;AAAI,YAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADA,eAEA;AAAI,YAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFA,eAGA;AAAI,YAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHA,eAIA;AAAI,YAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,cADM,eASN;AAAA,gCACA;AAAA,kCACA;AAAI,YAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADA,eAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFA,eAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHA,eAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADA,eAOA;AAAA,kCACA;AAAI,YAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADA,eAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFA,eAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHA,eAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPA,eAaA;AAAA,kCACA;AAAI,YAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADA,eAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFA,eAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHA,eAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAbA;AAAA;AAAA;AAAA;AAAA;AAAA,cATM;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA,UADF;AAoCH,CArCD;;KAAMA,S;AAuCN,eAAeA,SAAf","sourcesContent":["// import React from \"react\";\r\n// import ReactDOM from \"react-dom\";\r\n// import CRUDTable, {\r\n//   Fields,\r\n//   Field,\r\n//   CreateForm,\r\n//   UpdateForm,\r\n//   DeleteForm\r\n// } from \"react-crud-table\";\r\n\r\n// // Component's Base CSS\r\n// import \"./Css/UserTable.css\";\r\n\r\n// const UserTable = ({ field }) => <textarea {...field} />;\r\n\r\n// let tasks = [\r\n//   {\r\n//     id: 1,\r\n//     title: \"Create an example\",\r\n//     description: \"Create an example of how to use the component\"\r\n//   },\r\n//   {\r\n//     id: 2,\r\n//     title: \"Improve\",\r\n//     description: \"Improve the component!\"\r\n//   }\r\n// ];\r\n\r\n// const SORTERS = {\r\n//   NUMBER_ASCENDING: mapper => (a, b) => mapper(a) - mapper(b),\r\n//   NUMBER_DESCENDING: mapper => (a, b) => mapper(b) - mapper(a),\r\n//   STRING_ASCENDING: mapper => (a, b) => mapper(a).localeCompare(mapper(b)),\r\n//   STRING_DESCENDING: mapper => (a, b) => mapper(b).localeCompare(mapper(a))\r\n// };\r\n\r\n// const getSorter = data => {\r\n//   const mapper = x => x[data.field];\r\n//   let sorter = SORTERS.STRING_ASCENDING(mapper);\r\n\r\n//   if (data.field === \"id\") {\r\n//     sorter =\r\n//       data.direction === \"ascending\"\r\n//         ? SORTERS.NUMBER_ASCENDING(mapper)\r\n//         : SORTERS.NUMBER_DESCENDING(mapper);\r\n//   } else {\r\n//     sorter =\r\n//       data.direction === \"ascending\"\r\n//         ? SORTERS.STRING_ASCENDING(mapper)\r\n//         : SORTERS.STRING_DESCENDING(mapper);\r\n//   }\r\n\r\n//   return sorter;\r\n// };\r\n\r\n// let count = tasks.length;\r\n// const service = {\r\n//   fetchItems: payload => {\r\n//     let result = Array.from(tasks);\r\n//     result = result.sort(getSorter(payload.sort));\r\n//     return Promise.resolve(result);\r\n//   },\r\n//   create: task => {\r\n//     count += 1;\r\n//     tasks.push({\r\n//       ...task,\r\n//       id: count\r\n//     });\r\n//     return Promise.resolve(task);\r\n//   },\r\n//   update: data => {\r\n//     const task = tasks.find(t => t.id === data.id);\r\n//     task.title = data.title;\r\n//     task.description = data.description;\r\n//     return Promise.resolve(task);\r\n//   },\r\n//   delete: data => {\r\n//     const task = tasks.find(t => t.id === data.id);\r\n//     tasks = tasks.filter(t => t.id !== task.id);\r\n//     return Promise.resolve(task);\r\n//   }\r\n// };\r\n\r\n// const styles = {\r\n//   container: { margin: \"auto\", width: \"fit-content\" }\r\n// };\r\n\r\n// const Example = () => (\r\n//   <div style={styles.container}>\r\n//     <CRUDTable\r\n//       caption=\"Tasks\"\r\n//       fetchItems={payload => service.fetchItems(payload)}\r\n//     >\r\n//       <Fields>\r\n//         <Field name=\"id\" label=\"Id\" hideInCreateForm />\r\n//         <Field name=\"title\" label=\"Title\" placeholder=\"Title\" />\r\n//         <Field\r\n//           name=\"description\"\r\n//           label=\"Description\"\r\n//           render={UserTable}\r\n//         />\r\n//       </Fields>\r\n//       <CreateForm\r\n//         title=\"Task Creation\"\r\n//         message=\"Create a new task!\"\r\n//         trigger=\"Create Task\"\r\n//         onSubmit={task => service.create(task)}\r\n//         submitText=\"Create\"\r\n//         validate={values => {\r\n//           const errors = {};\r\n//           if (!values.title) {\r\n//             errors.title = \"Please, provide task's title\";\r\n//           }\r\n\r\n//           if (!values.description) {\r\n//             errors.description = \"Please, provide task's description\";\r\n//           }\r\n\r\n//           return errors;\r\n//         }}\r\n//       />\r\n\r\n//       <UpdateForm\r\n//         title=\"Task Update Process\"\r\n//         message=\"Update task\"\r\n//         trigger=\"Update\"\r\n//         onSubmit={task => service.update(task)}\r\n//         submitText=\"Update\"\r\n//         validate={values => {\r\n//           const errors = {};\r\n\r\n//           if (!values.id) {\r\n//             errors.id = \"Please, provide id\";\r\n//           }\r\n\r\n//           if (!values.title) {\r\n//             errors.title = \"Please, provide task's title\";\r\n//           }\r\n\r\n//           if (!values.description) {\r\n//             errors.description = \"Please, provide task's description\";\r\n//           }\r\n\r\n//           return errors;\r\n//         }}\r\n//       />\r\n\r\n//       <DeleteForm\r\n//         title=\"Task Delete Process\"\r\n//         message=\"Are you sure you want to delete the task?\"\r\n//         trigger=\"Delete\"\r\n//         onSubmit={task => service.delete(task)}\r\n//         submitText=\"Delete\"\r\n//         validate={values => {\r\n//           const errors = {};\r\n//           if (!values.id) {\r\n//             errors.id = \"Please, provide id\";\r\n//           }\r\n//           return errors;\r\n//         }}\r\n//       />\r\n//     </CRUDTable>\r\n//   </div>\r\n// );\r\n\r\n// Example.propTypes = {};\r\n\r\n// ReactDOM.render(<Example />, document.getElementById(\"root\"));\r\n// export default UserTable;\r\nimport React from 'react';\r\n\r\n\r\nconst UserTable = () => {\r\n    return (\r\n      <div>\r\n\r\n      <table class=\"table table-dark\">\r\n<thead>\r\n<tr>\r\n<th scope=\"col\">ID</th>\r\n<th scope=\"col\">First name</th>\r\n<th scope=\"col\">Last name</th>\r\n<th scope=\"col\">Email</th>\r\n</tr>\r\n</thead>\r\n<tbody>\r\n<tr>\r\n<th scope=\"row\">1</th>\r\n<td>Mark</td>\r\n<td>Otto</td>\r\n<td>@mdo</td>\r\n</tr>\r\n<tr>\r\n<th scope=\"row\">2</th>\r\n<td>Jacob</td>\r\n<td>Thornton</td>\r\n<td>@fat</td>\r\n</tr>\r\n<tr>\r\n<th scope=\"row\">3</th>\r\n<td>Larry</td>\r\n<td>the Bird</td>\r\n<td>@twitter</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n  </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default UserTable;"]},"metadata":{},"sourceType":"module"}