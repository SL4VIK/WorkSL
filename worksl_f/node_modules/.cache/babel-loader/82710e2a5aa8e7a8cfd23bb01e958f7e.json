{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\terme\\\\Desktop\\\\Project\\\\WorkSL\\\\worksl_f\\\\src\\\\Components\\\\Admin.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport CRUDTable, { Fields, Field, CreateForm, UpdateForm, DeleteForm } from \"react-crud-table\"; // Component's Base CSS\n\nimport \"./Css/Admin.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DescriptionRenderer = ({\n  field\n}) => /*#__PURE__*/_jsxDEV(\"textarea\", { ...field\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 14,\n  columnNumber: 44\n}, this);\n\n_c = DescriptionRenderer;\nlet tasks = [{\n  id: 1,\n  title: \"Create an example\",\n  description: \"Create an example of how to use the component\"\n}, {\n  id: 2,\n  title: \"Improve\",\n  description: \"Improve the component!\"\n}];\nconst SORTERS = {\n  NUMBER_ASCENDING: mapper => (a, b) => mapper(a) - mapper(b),\n  NUMBER_DESCENDING: mapper => (a, b) => mapper(b) - mapper(a),\n  STRING_ASCENDING: mapper => (a, b) => mapper(a).localeCompare(mapper(b)),\n  STRING_DESCENDING: mapper => (a, b) => mapper(b).localeCompare(mapper(a))\n};\n\nconst getSorter = data => {\n  const mapper = x => x[data.field];\n\n  let sorter = SORTERS.STRING_ASCENDING(mapper);\n\n  if (data.field === \"id\") {\n    sorter = data.direction === \"ascending\" ? SORTERS.NUMBER_ASCENDING(mapper) : SORTERS.NUMBER_DESCENDING(mapper);\n  } else {\n    sorter = data.direction === \"ascending\" ? SORTERS.STRING_ASCENDING(mapper) : SORTERS.STRING_DESCENDING(mapper);\n  }\n\n  return sorter;\n};\n\nlet count = tasks.length;\nconst service = {\n  fetchItems: payload => {\n    let result = Array.from(tasks);\n    result = result.sort(getSorter(payload.sort));\n    return Promise.resolve(result);\n  },\n  create: task => {\n    count += 1;\n    tasks.push({ ...task,\n      id: count\n    });\n    return Promise.resolve(task);\n  },\n  update: data => {\n    const task = tasks.find(t => t.id === data.id);\n    task.title = data.title;\n    task.description = data.description;\n    return Promise.resolve(task);\n  },\n  delete: data => {\n    const task = tasks.find(t => t.id === data.id);\n    tasks = tasks.filter(t => t.id !== task.id);\n    return Promise.resolve(task);\n  }\n};\nconst styles = {\n  container: {\n    margin: \"auto\",\n    width: \"fit-content\"\n  }\n};\n\nconst Example = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  style: styles.container,\n  children: /*#__PURE__*/_jsxDEV(CRUDTable, {\n    caption: \"Tasks\",\n    fetchItems: payload => service.fetchItems(payload),\n    children: [/*#__PURE__*/_jsxDEV(Fields, {\n      children: [/*#__PURE__*/_jsxDEV(Field, {\n        name: \"id\",\n        label: \"Id\",\n        hideInCreateForm: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        name: \"title\",\n        label: \"Title\",\n        placeholder: \"Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        name: \"description\",\n        label: \"Description\",\n        render: DescriptionRenderer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CreateForm, {\n      title: \"Task Creation\",\n      message: \"Create a new task!\",\n      trigger: \"Create Task\",\n      onSubmit: task => service.create(task),\n      submitText: \"Create\",\n      validate: values => {\n        const errors = {};\n\n        if (!values.title) {\n          errors.title = \"Please, provide task's title\";\n        }\n\n        if (!values.description) {\n          errors.description = \"Please, provide task's description\";\n        }\n\n        return errors;\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(UpdateForm, {\n      title: \"Task Update Process\",\n      message: \"Update task\",\n      trigger: \"Update\",\n      onSubmit: task => service.update(task),\n      submitText: \"Update\",\n      validate: values => {\n        const errors = {};\n\n        if (!values.id) {\n          errors.id = \"Please, provide id\";\n        }\n\n        if (!values.title) {\n          errors.title = \"Please, provide task's title\";\n        }\n\n        if (!values.description) {\n          errors.description = \"Please, provide task's description\";\n        }\n\n        return errors;\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DeleteForm, {\n      title: \"Task Delete Process\",\n      message: \"Are you sure you want to delete the task?\",\n      trigger: \"Delete\",\n      onSubmit: task => service.delete(task),\n      submitText: \"Delete\",\n      validate: values => {\n        const errors = {};\n\n        if (!values.id) {\n          errors.id = \"Please, provide id\";\n        }\n\n        return errors;\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 88,\n  columnNumber: 3\n}, this);\n\n_c2 = Example;\nExample.propTypes = {};\nReactDOM.render( /*#__PURE__*/_jsxDEV(Example, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 167,\n  columnNumber: 17\n}, this), document.getElementById(\"root\")); // export default Admin;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"DescriptionRenderer\");\n$RefreshReg$(_c2, \"Example\");","map":{"version":3,"sources":["C:/Users/terme/Desktop/Project/WorkSL/worksl_f/src/Components/Admin.js"],"names":["React","ReactDOM","CRUDTable","Fields","Field","CreateForm","UpdateForm","DeleteForm","DescriptionRenderer","field","tasks","id","title","description","SORTERS","NUMBER_ASCENDING","mapper","a","b","NUMBER_DESCENDING","STRING_ASCENDING","localeCompare","STRING_DESCENDING","getSorter","data","x","sorter","direction","count","length","service","fetchItems","payload","result","Array","from","sort","Promise","resolve","create","task","push","update","find","t","delete","filter","styles","container","margin","width","Example","values","errors","propTypes","render","document","getElementById"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport CRUDTable, {\r\n  Fields,\r\n  Field,\r\n  CreateForm,\r\n  UpdateForm,\r\n  DeleteForm\r\n} from \"react-crud-table\";\r\n\r\n// Component's Base CSS\r\nimport \"./Css/Admin.css\";\r\n\r\nconst DescriptionRenderer = ({ field }) => <textarea {...field} />;\r\n\r\nlet tasks = [\r\n  {\r\n    id: 1,\r\n    title: \"Create an example\",\r\n    description: \"Create an example of how to use the component\"\r\n  },\r\n  {\r\n    id: 2,\r\n    title: \"Improve\",\r\n    description: \"Improve the component!\"\r\n  }\r\n];\r\n\r\nconst SORTERS = {\r\n  NUMBER_ASCENDING: mapper => (a, b) => mapper(a) - mapper(b),\r\n  NUMBER_DESCENDING: mapper => (a, b) => mapper(b) - mapper(a),\r\n  STRING_ASCENDING: mapper => (a, b) => mapper(a).localeCompare(mapper(b)),\r\n  STRING_DESCENDING: mapper => (a, b) => mapper(b).localeCompare(mapper(a))\r\n};\r\n\r\nconst getSorter = data => {\r\n  const mapper = x => x[data.field];\r\n  let sorter = SORTERS.STRING_ASCENDING(mapper);\r\n\r\n  if (data.field === \"id\") {\r\n    sorter =\r\n      data.direction === \"ascending\"\r\n        ? SORTERS.NUMBER_ASCENDING(mapper)\r\n        : SORTERS.NUMBER_DESCENDING(mapper);\r\n  } else {\r\n    sorter =\r\n      data.direction === \"ascending\"\r\n        ? SORTERS.STRING_ASCENDING(mapper)\r\n        : SORTERS.STRING_DESCENDING(mapper);\r\n  }\r\n\r\n  return sorter;\r\n};\r\n\r\nlet count = tasks.length;\r\nconst service = {\r\n  fetchItems: payload => {\r\n    let result = Array.from(tasks);\r\n    result = result.sort(getSorter(payload.sort));\r\n    return Promise.resolve(result);\r\n  },\r\n  create: task => {\r\n    count += 1;\r\n    tasks.push({\r\n      ...task,\r\n      id: count\r\n    });\r\n    return Promise.resolve(task);\r\n  },\r\n  update: data => {\r\n    const task = tasks.find(t => t.id === data.id);\r\n    task.title = data.title;\r\n    task.description = data.description;\r\n    return Promise.resolve(task);\r\n  },\r\n  delete: data => {\r\n    const task = tasks.find(t => t.id === data.id);\r\n    tasks = tasks.filter(t => t.id !== task.id);\r\n    return Promise.resolve(task);\r\n  }\r\n};\r\n\r\nconst styles = {\r\n  container: { margin: \"auto\", width: \"fit-content\" }\r\n};\r\n\r\nconst Example = () => (\r\n  <div style={styles.container}>\r\n    <CRUDTable\r\n      caption=\"Tasks\"\r\n      fetchItems={payload => service.fetchItems(payload)}\r\n    >\r\n      <Fields>\r\n        <Field name=\"id\" label=\"Id\" hideInCreateForm />\r\n        <Field name=\"title\" label=\"Title\" placeholder=\"Title\" />\r\n        <Field\r\n          name=\"description\"\r\n          label=\"Description\"\r\n          render={DescriptionRenderer}\r\n        />\r\n      </Fields>\r\n      <CreateForm\r\n        title=\"Task Creation\"\r\n        message=\"Create a new task!\"\r\n        trigger=\"Create Task\"\r\n        onSubmit={task => service.create(task)}\r\n        submitText=\"Create\"\r\n        validate={values => {\r\n          const errors = {};\r\n          if (!values.title) {\r\n            errors.title = \"Please, provide task's title\";\r\n          }\r\n\r\n          if (!values.description) {\r\n            errors.description = \"Please, provide task's description\";\r\n          }\r\n\r\n          return errors;\r\n        }}\r\n      />\r\n\r\n      <UpdateForm\r\n        title=\"Task Update Process\"\r\n        message=\"Update task\"\r\n        trigger=\"Update\"\r\n        onSubmit={task => service.update(task)}\r\n        submitText=\"Update\"\r\n        validate={values => {\r\n          const errors = {};\r\n\r\n          if (!values.id) {\r\n            errors.id = \"Please, provide id\";\r\n          }\r\n\r\n          if (!values.title) {\r\n            errors.title = \"Please, provide task's title\";\r\n          }\r\n\r\n          if (!values.description) {\r\n            errors.description = \"Please, provide task's description\";\r\n          }\r\n\r\n          return errors;\r\n        }}\r\n      />\r\n\r\n      <DeleteForm\r\n        title=\"Task Delete Process\"\r\n        message=\"Are you sure you want to delete the task?\"\r\n        trigger=\"Delete\"\r\n        onSubmit={task => service.delete(task)}\r\n        submitText=\"Delete\"\r\n        validate={values => {\r\n          const errors = {};\r\n          if (!values.id) {\r\n            errors.id = \"Please, provide id\";\r\n          }\r\n          return errors;\r\n        }}\r\n      />\r\n    </CRUDTable>\r\n  </div>\r\n);\r\n\r\nExample.propTypes = {};\r\n\r\nReactDOM.render(<Example />, document.getElementById(\"root\"));\r\n\r\n// export default Admin;"]},"metadata":{},"sourceType":"module"}