{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\terme\\\\Desktop\\\\Project\\\\WorkSL\\\\worksl_f\\\\src\\\\Components\\\\User components\\\\UserSalarytable.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport UserSalaryRow from './UserSalaryRow';\nimport { Button } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UserSalaryTable = () => {\n  _s();\n\n  const salaryuser = useSelector(state => state.salaryuser.salaryuser);\n  const dispatch = useDispatch();\n\n  const SalaryRefresh = async () => {\n    const response = await fetch('http://127.0.0.1:8000/api/salaryrefresh', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'X-Requested-With': 'XMLHttpRequest'\n      },\n      credentials: 'include',\n      body: JSON.stringify({})\n    });\n    SalaryUser();\n    const content = await response.json();\n    console.log(content);\n  };\n\n  const SalaryUser = async () => {\n    const response = await fetch('http://127.0.0.1:8000/api/salaryuser', {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'X-Requested-With': 'XMLHttpRequest'\n      },\n      credentials: 'include'\n    });\n    const content = await response.json();\n\n    if (response.status === 200) {\n      dispatch({\n        type: 'GETSALARYUSER',\n        payload: content\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      class: \"table table-dark\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 1\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Cost\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 1\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Total Hours\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 1\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Salary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 1\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Month\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 1\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"btn btn-warning\",\n              onClick: SalaryRefresh,\n              children: \"Refresh\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 1\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 1\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: salaryuser.map(salary => /*#__PURE__*/_jsxDEV(UserSalaryRow, {\n          salary: salary\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 34\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 7\n  }, this);\n};\n\n_s(UserSalaryTable, \"jpt5IbsR45Y45rxB5/TC62bfUZI=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = UserSalaryTable;\nexport default UserSalaryTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserSalaryTable\");","map":{"version":3,"sources":["C:/Users/terme/Desktop/Project/WorkSL/worksl_f/src/Components/User components/UserSalarytable.js"],"names":["React","useState","useDispatch","useSelector","UserSalaryRow","Button","UserSalaryTable","salaryuser","state","dispatch","SalaryRefresh","response","fetch","method","headers","credentials","body","JSON","stringify","SalaryUser","content","json","console","log","status","type","payload","map","salary"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,SAASC,MAAT,QAAuB,iBAAvB;;;AAEA,MAAMC,eAAe,GAAG,MAAM;AAAA;;AAC5B,QAAMC,UAAU,GAAGJ,WAAW,CAACK,KAAK,IAAIA,KAAK,CAACD,UAAN,CAAiBA,UAA3B,CAA9B;AACA,QAAME,QAAQ,GAAGP,WAAW,EAA5B;;AAEA,QAAMQ,aAAa,GAAG,YAAU;AAC9B,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,yCAAD,EAA4C;AACpEC,MAAAA,MAAM,EAAE,MAD4D;AAEpEC,MAAAA,OAAO,EAAE;AAAC,wBAAgB,kBAAjB;AAAqC,4BAAoB;AAAzD,OAF2D;AAGpEC,MAAAA,WAAW,EAAE,SAHuD;AAIpEC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe,EAAf;AAJ8D,KAA5C,CAA5B;AAOCC,IAAAA,UAAU;AACX,UAAMC,OAAO,GAAG,MAAMT,QAAQ,CAACU,IAAT,EAAtB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,OAAZ;AACC,GAXH;;AAYE,QAAMD,UAAU,GAAG,YAAU;AACzB,UAAMR,QAAQ,GAAG,MAAMC,KAAK,CAAC,sCAAD,EAAyC;AACjEC,MAAAA,MAAM,EAAE,KADyD;AAEjEC,MAAAA,OAAO,EAAE;AAAC,wBAAgB,kBAAjB;AAAqC,4BAAoB;AAAzD,OAFwD;AAGjEC,MAAAA,WAAW,EAAE;AAHoD,KAAzC,CAA5B;AAKA,UAAMK,OAAO,GAAG,MAAMT,QAAQ,CAACU,IAAT,EAAtB;;AACA,QAAGV,QAAQ,CAACa,MAAT,KAAoB,GAAvB,EAA2B;AACzBf,MAAAA,QAAQ,CAAC;AAACgB,QAAAA,IAAI,EAAE,eAAP;AAAwBC,QAAAA,OAAO,EAAEN;AAAjC,OAAD,CAAR;AAAoD;AACzD,GATD;;AAUA,sBACE;AAAA,2BAEA;AAAO,MAAA,KAAK,EAAC,kBAAb;AAAA,8BACN;AAAA,+BACA;AAAA,kCACA;AAAI,YAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADA,eAEA;AAAI,YAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFA,eAGA;AAAI,YAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHA,eAIA;AAAI,YAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJA,eAKA;AAAI,YAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALA,eAMA;AAAI,YAAA,KAAK,EAAC,KAAV;AAAA,mCAAgB,QAAC,MAAD;AAAQ,cAAA,OAAO,EAAC,iBAAhB;AAAkC,cAAA,OAAO,EAAIV,aAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAhB;AAAA;AAAA;AAAA;AAAA,kBANA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,cADM,eAWN;AAAA,kBAEMH,UAAU,CAACoB,GAAX,CAAgBC,MAAD,iBAAY,QAAC,aAAD;AAAe,UAAA,MAAM,EAAIA;AAAzB;AAAA;AAAA;AAAA;AAAA,gBAA3B;AAFN;AAAA;AAAA;AAAA;AAAA,cAXM;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA,UADF;AAuBH,CAjDD;;GAAMtB,e;UACeH,W,EACFD,W;;;KAFbI,e;AAmDN,eAAeA,eAAf","sourcesContent":["import React, {useState} from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport UserSalaryRow from './UserSalaryRow';\r\nimport { Button } from 'react-bootstrap'\r\n\r\nconst UserSalaryTable = () => {\r\n  const salaryuser = useSelector(state => state.salaryuser.salaryuser);\r\n  const dispatch = useDispatch();\r\n\r\n  const SalaryRefresh = async() =>{\r\n    const response = await fetch('http://127.0.0.1:8000/api/salaryrefresh', {\r\n        method: 'POST',\r\n        headers: {'Content-Type': 'application/json', 'X-Requested-With': 'XMLHttpRequest'},\r\n        credentials: 'include',\r\n        body: JSON.stringify({\r\n        }),\r\n    });\r\n     SalaryUser();\r\n    const content = await response.json();\r\n    console.log(content);\r\n    }\r\n    const SalaryUser = async()=> {\r\n        const response = await fetch('http://127.0.0.1:8000/api/salaryuser', {\r\n            method: 'GET',\r\n            headers: {'Content-Type': 'application/json', 'X-Requested-With': 'XMLHttpRequest'},\r\n            credentials: 'include',\r\n        });\r\n        const content = await response.json();\r\n        if(response.status === 200){\r\n          dispatch({type: 'GETSALARYUSER', payload: content})}   \r\n    }\r\n    return (\r\n      <div>\r\n\r\n      <table class=\"table table-dark\">\r\n<thead>\r\n<tr>\r\n<th scope=\"col\">ID</th>\r\n<th scope=\"col\">Cost</th>\r\n<th scope=\"col\">Total Hours</th>\r\n<th scope=\"col\">Salary</th>\r\n<th scope=\"col\">Month</th>\r\n<th scope=\"col\"><Button variant=\"btn btn-warning\" onClick = {SalaryRefresh}>Refresh</Button></th>\r\n</tr>\r\n</thead>\r\n<tbody>\r\n    {\r\n      salaryuser.map((salary) => <UserSalaryRow salary = {salary} />)\r\n    }\r\n</tbody>\r\n</table>\r\n  </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default UserSalaryTable;"]},"metadata":{},"sourceType":"module"}