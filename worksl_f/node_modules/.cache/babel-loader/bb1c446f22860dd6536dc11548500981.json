{"ast":null,"code":"const initialState = {\n  isLoggedIn: false,\n  user: []\n};\nexport const ADD_USER = \"ADD_USER\";\nexport const UserReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_USER:\n      return { ...state,\n        user: action.payload,\n        isLoggedIn: true\n      };\n\n    case REMOVE_USER:\n      return { ...state,\n        user: [],\n        isLoggedIn: false\n      };\n\n    case ADD_ERROR:\n      return { ...state,\n        status: true\n      };\n\n    case REMOVE_ERROR:\n      return { ...state,\n        status: false\n      };\n\n    case ADD_TEXT:\n      return { ...state,\n        users: [...state.users, action.payload]\n      };\n    // case REMOVE_USER:\n    //     return {...state, users: state.users.filter(user => user.id !== action.payload)}\n\n    default:\n      return state;\n  }\n};\n_c = UserReducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserReducer\");","map":{"version":3,"sources":["C:/Users/terme/Desktop/Project/WorkSL/worksl_f/src/Data/UserReducer.js"],"names":["initialState","isLoggedIn","user","ADD_USER","UserReducer","state","action","type","payload","REMOVE_USER","ADD_ERROR","status","REMOVE_ERROR","ADD_TEXT","users"],"mappings":"AAAA,MAAMA,YAAY,GAAG;AACjBC,EAAAA,UAAU,EAAE,KADK;AAEjBC,EAAAA,IAAI,EAAE;AAFW,CAArB;AAKA,OAAO,MAAMC,QAAQ,GAAG,UAAjB;AAEP,OAAO,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGL,YAAT,EAAuBM,MAAvB,KAAkC;AACzD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKJ,QAAL;AACI,aAAO,EAAC,GAAGE,KAAJ;AAAWH,QAAAA,IAAI,EAAEI,MAAM,CAACE,OAAxB;AAAiCP,QAAAA,UAAU,EAAE;AAA7C,OAAP;;AACJ,SAAKQ,WAAL;AACI,aAAO,EAAC,GAAGJ,KAAJ;AAAWH,QAAAA,IAAI,EAAE,EAAjB;AAAqBD,QAAAA,UAAU,EAAE;AAAjC,OAAP;;AAEJ,SAAKS,SAAL;AACI,aAAO,EAAC,GAAGL,KAAJ;AAAYM,QAAAA,MAAM,EAAE;AAApB,OAAP;;AACJ,SAAKC,YAAL;AACI,aAAO,EAAC,GAAGP,KAAJ;AAAWM,QAAAA,MAAM,EAAE;AAAnB,OAAP;;AACJ,SAAKE,QAAL;AACI,aAAO,EAAC,GAAGR,KAAJ;AAAWS,QAAAA,KAAK,EAAE,CAAC,GAAGT,KAAK,CAACS,KAAV,EAAiBR,MAAM,CAACE,OAAxB;AAAlB,OAAP;AACJ;AACA;;AACA;AACI,aAAOH,KAAP;AAfR;AAiBH,CAlBM;KAAMD,W","sourcesContent":["const initialState = {\r\n    isLoggedIn: false,\r\n    user: [],\r\n}\r\n\r\nexport const ADD_USER = \"ADD_USER\";\r\n\r\nexport const UserReducer = (state = initialState, action) => {\r\n    switch (action.type){\r\n        case ADD_USER:\r\n            return {...state, user: action.payload, isLoggedIn: true}\r\n        case REMOVE_USER:\r\n            return {...state, user: [], isLoggedIn: false}\r\n\r\n        case ADD_ERROR:\r\n            return {...state,  status: true }\r\n        case REMOVE_ERROR:\r\n            return {...state, status: false}\r\n        case ADD_TEXT:\r\n            return {...state, users: [...state.users, action.payload]}\r\n        // case REMOVE_USER:\r\n        //     return {...state, users: state.users.filter(user => user.id !== action.payload)}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}